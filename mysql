
import tkinter as tk
from tkinter import *
from tkinter import ttk
import mysql.connector
db=mysql.connector.connect(user="root",password='PHW#84#jeor',host='localhost',database='amitdb')
#windown
r=tk.Tk()
r.title('Nhập Hàng')
r.geometry('800x600')
r.resizable(False,False)
frm=Frame(r)
frm.pack(side=tk.LEFT)

#Load table
query='select * from product'
q_show=db.cursor()
q_show.execute(query)
rows=q_show.fetchall()

#Tree view
tree = ttk.Treeview(frm, columns=(1, 2, 3, 4, 5), show='headings', height='5')
tree.heading(1, text='ProID')
tree.heading(2, text='ProName')
tree.heading(3, text='ProType')
tree.heading(4, text='ProCost')
tree.heading(5, text='ProNum')

#Load db
for i in rows:
    tree.insert('','end',iid=i[0],values=i)
tree.pack()

#Delete row
def delete():
    selected = tree.selection()
    if not selected:
        # Không có mục nào được chọn, không làm gì hoặc hiển thị thông báo lỗi
        return

    item = selected[0]
    pro_id = tree.item(item)['values'][0]  # Lấy giá trị ProID từ mục đã chọn

    query = "DELETE FROM product WHERE ProID = %s"
    q_del = db.cursor()
    q_del.execute(query, (pro_id,))  # Đặt ProID trong một tuple
    db.commit()
    tree.delete(item)

#update row
# Tạo các trường nhập liệu
label_id = tk.Label(frm, text="ID")
label_id.pack()

entry_id = tk.Entry(frm)
entry_id.pack()

label_name = tk.Label(frm, text="Tên sp")
label_name.pack()

entry_name = tk.Entry(frm)
entry_name.pack()

label_type = tk.Label(frm, text="Loại")
label_type.pack()

entry_type = tk.Entry(frm)
entry_type.pack()

label_price = tk.Label(frm, text="Giá")
label_price.pack()

entry_price = tk.Entry(frm)
entry_price.pack()

label_quantity = tk.Label(frm, text="Số lượng")
label_quantity.pack()

entry_quantity = tk.Entry(frm)
entry_quantity.pack()

# Hàm xử lý sự kiện thêm sản phẩm
def add_product():
    # Lấy thông tin từ các trường nhập liệu
    product_id=entry_id.get()
    product_name = entry_name.get()
    product_type = entry_type.get()
    product_quantity = entry_quantity.get()
    product_price = entry_price.get()

    # Thực hiện câu lệnh SQL để thêm sản phẩm vào cơ sở dữ liệu
    query = "INSERT INTO product (ProID,ProName, ProType, ProCost, ProNum) VALUES (%s, %s, %s, %s,%s)"
    product_data = (product_id,product_name, product_type, product_quantity, product_price)
    cursor = db.cursor()
    cursor.execute(query, product_data)
    db.commit()
     # Xóa dữ liệu đã nhập trong các trường nhập liệu
    entry_id.delete(0, tk.END)
    entry_name.delete(0, tk.END)
    entry_type.delete(0, tk.END)
    entry_quantity.delete(0, tk.END)
    entry_price.delete(0, tk.END)

    # Cập nhật dữ liệu trên treeview
    tree.delete(*tree.get_children())

    query = "SELECT * FROM product"
    cursor.execute(query)
    products = cursor.fetchall()

    for product in products:
        tree.insert("", "end", values=product)
    # Xóa dữ liệu đã nhập trong các trường nhập liệu
    entry_id.delete(0, tk.END)
    entry_name.delete(0, tk.END)
    entry_type.delete(0, tk.END)
    entry_quantity.delete(0, tk.END)
    entry_price.delete(0, tk.END)

def export_to_excel():
    # Kết nối đến cơ sở dữ liệu
    db = mysql.connector.connect(user="root", password='PHW#84#jeor', host='localhost', database='amitdb')

    # Truy vấn dữ liệu từ cơ sở dữ liệu
    query = 'SELECT * FROM product'
    cursor = db.cursor()
    cursor.execute(query)
    rows = cursor.fetchall()

    # Đóng kết nối cơ sở dữ liệu
    db.close()

    # Tạo DataFrame từ dữ liệu
    df = pd.DataFrame(rows, columns=['ProID', 'ProName', 'ProType', 'ProCost', 'ProNum'])

    # Chọn đường dẫn và tên file Excel đầu ra
    file_path = filedialog.asksaveasfilename(defaultextension='.xlsx')

    # Xuất dữ liệu ra file Excel
    df.to_excel(file_path, index=False)

b2 = tk.Button(frm, text='Thêm sản phẩm', bg='green', width=20, command=add_product)
b2.pack()


b1=tk.Button(frm,text='Delete',bg='red',width=20,command=delete)
b1.pack()

export_button = tk.Button(frm, text='Xuất Excel', bg='blue', width=20, command=export_to_excel)
export_button.pack()


r.mainloop()
